{"version":3,"sources":["components/Items.js","components/Navbar.js","components/Home.js","components/Login.js","components/Cart.js","components/UsersInfo.js","components/SignupForm.js","components/Signup.js","components/MemberInfo.js","components/Item.js","components/NotFound.js","components/CheckoutForm.js","components/OrderSummary.js","components/Payment.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["style","position","padding","border","borderRadius","marginRight","marginLeft","color","Items","handleClick","id","evt","a","Axios","delete","status","newItemList","state","items","filter","item","setState","console","error","handleSubmit","preventDefault","post","name","target","value","superhero","imageUrl","price","description","then","res","unshift","data","document","getElementById","reset","loading","catch","err","stack","addOrder","superheroId","getAttribute","log","fetch","method","response","json","itemsData","this","length","className","Form","onSubmit","Group","Label","Control","type","placeholder","as","rows","Button","variant","CardColumns","map","Card","key","Img","src","alt","Body","Title","to","Text","itemID","onClick","Component","Navbar","props","user","activeLink","onpopstate","location","pathname","match","role","Home","useState","isSignedIn","width","height","Login","handleUser","email","setEmail","password","setPassword","setItems","e","get","Array","isArray","window","alert","component","FormGroup","controlId","bssize","FormLabel","FormControl","autoFocus","onChange","block","disabled","Cart","handleRemove","newOrders","orders","order","isLoggedIn","isLoading","display","justifyContent","UsersInfo","users","axios","deletingUserId","newUsersList","firstName","lastName","addresses","line1","line2","city","zip","handleDelete","MemberInfo","SignupForm","required","Signup","bind","event","userDetails","userAddress","history","push","textAlign","memberInfo","memberId","message","userId","params","listen","action","member","memberData","Item","superpowerId","NotFound","CheckoutForm","succeeded","setSucceeded","setError","processing","setProcessing","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","useEffect","headers","body","JSON","stringify","handleChange","empty","ev","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","payload","options","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","href","OrderSummary","ListGroup","horizontal","promise","loadStripe","Payment","Routes","exact","path","render","matchProps","App","userInfo","React","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a454b24d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios'; \r\nimport { Card, CardColumns, Button, Form } from 'react-bootstrap';\r\n\r\nconst style = {\r\n    position: 'relative',\r\n    padding: '1rem',\r\n    border: '.2rem solid #ececec',\r\n    borderRadius: '8px',\r\n    marginRight: '5%',\r\n    marginLeft: '5%',\r\n    color: '#212529'\r\n}\r\n\r\n\r\nexport default class Items extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: [],\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch(\"/api/items\", { method: \"GET\" });\r\n            const itemsData = await response.json();\r\n \r\n            this.setState({\r\n                items: itemsData,\r\n                loading: false,\r\n            });\r\n        } catch (err) {\r\n            console.error(\"ERROR: \", err);\r\n        }\r\n    }\r\n\r\n    //Delete button functionality for items\r\n    handleClick = async (id, evt) => {\r\n        try {\r\n            const {status} = await Axios.delete(`/api/items/${id}`) //route listing\r\n            if (status === 200) {\r\n                //creates the new item list without the deleted item; filter is called to return list of items barring whichever item was flagged as deleted; react re-renders page immediately when state changes\r\n                const newItemList = this.state.items.filter(item => item.id !== id)\r\n                this.setState({\r\n                    items: newItemList\r\n                })\r\n            }        \r\n        } \r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        Axios.post('/api/items/', {\r\n           name: evt.target.name.value,\r\n           superhero: evt.target.superhero.value,\r\n           imageUrl: evt.target.imageUrl.value,\r\n           price: evt.target.price.value,\r\n           description: evt.target.description.value,\r\n        })\r\n        .then(res => {\r\n            // insert the new item at the beginning of the items array\r\n            const { items } = this.state;\r\n            items.unshift(res.data);\r\n            \r\n            // reset the forms fields on submit\r\n            document.getElementById('new-item').reset();\r\n\r\n            // re-render state to display updated array\r\n            this.setState({\r\n               items: items,\r\n               loading: false,\r\n            });\r\n         })\r\n        .catch(err => {\r\n            console.error(err.stack);\r\n        });\r\n    }\r\n\r\n    addOrder = evt => {\r\n        Axios.post('/api/orders/add', {\r\n            superheroId: evt.target.getAttribute('itemID'),\r\n        })\r\n        .then((res) => {\r\n           console.log(res.data);\r\n        })\r\n        .catch(err => {\r\n           console.error(err.stack);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { items, loading } = this.state;\r\n        if (loading) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        if (items.length === 0) {\r\n            return <div>No items found!</div>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"items-form\">\r\n                   <Form id=\"new-item\" onSubmit={evt => this.handleSubmit(evt)} style={style}>\r\n                      <Form.Group>\r\n                         <Form.Label>Name</Form.Label>\r\n                         <Form.Control name=\"name\" type=\"text\" placeholder=\"Enter superpower name.\"/>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                         <Form.Label>Superhero</Form.Label>\r\n                         <Form.Control name=\"superhero\" type=\"text\" placeholder=\"Owner of superpower.\"/>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                         <Form.Label>Image URL</Form.Label>\r\n                         <Form.Control name=\"imageUrl\" type=\"url\" placeholder=\"Please provide direct image link.\"/>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                         <Form.Label>Price</Form.Label>\r\n                         <Form.Control name=\"price\" type=\"number\" placeholder=\"Cost of item\"/>\r\n                      </Form.Group>\r\n                      <Form.Group>\r\n                         <Form.Label> Description </Form.Label>\r\n                         <Form.Control as='textarea' rows=\"2\" name=\"description\" type=\"text\" placeholder=\"Include small description of power here.\"/>\r\n                      </Form.Group>\r\n                      \r\n                      <Button variant=\"primary\" type=\"submit\">\r\n                           Submit\r\n                      </Button>\r\n                      \r\n                   </Form>\r\n                \r\n                </div>\r\n               \r\n                <br />\r\n                <hr />\r\n                <br />\r\n            \r\n                <CardColumns style={{marginLeft: '5%', marginRight: '5%'}}>\r\n                    {items.map(item => {\r\n                        return (\r\n                                <Card key={item.id}>\r\n                                    <Card.Img variant=\"top\" src={item.imageUrl} alt='' />\r\n                                    <Card.Body>\r\n                                    <Card.Title><Link to={`/superpowers/${item.id}`}> {item.superhero}'s {item.name} </Link></Card.Title>\r\n                                    <Card.Text>${item.price}.00</Card.Text>\r\n                                    <Button variant='primary' type='button' value=\"Add to cart\" itemID={item.id} onClick={(evt) => this.addOrder(evt)} style={{marginRight: '3%'}}>Add To Cart</Button>\r\n                                    <Button variant='danger' type='button' onClick={() => {this.handleClick(item.id)}}>Delete Item</Button>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                        )\r\n                    })}\r\n                </CardColumns>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n","import React  from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    const { handleClick, user, activeLink } = props;\r\n    \r\n    // An inbuilt method of the window object: window.onpopstate \r\n    // The primary reason for this method is so that duplicate URLS won't be stacked\r\n    // on top of one another (this occurs when the same link is clicked multiple times) since those dups undermine the functionality of the browser back button.\r\n    // this method runs only if browser back button was clicked.\r\n    onpopstate = () => {\r\n       handleClick(document.location.pathname);\r\n    }\r\n\r\n    return (\r\n       <div className=\"navbar-container\">\r\n          <div>\r\n             <Link to=\"/\" className={activeLink === '/' ? 'selected' : \"navbar-link-content\"} onClick={() => handleClick('/')}>\r\n                <i className=\"fas fa-home\"></i>\r\n             </Link>\r\n          </div>\r\n\r\n          <div>\r\n             <Link to=\"/superpowers\" className={activeLink === '/superpowers' || activeLink === `/superpowers/${document.location.pathname.match(/\\d/g)}` ? 'selected' : \"navbar-link-content\"} onClick={() => handleClick('/superpowers')} >\r\n                <i className=\"fab fa-superpowers\"></i>  \r\n             </Link>\r\n          </div>\r\n\r\n          <div>\r\n             <Link to=\"/cart\" className={activeLink === '/cart' ? 'selected' : \"navbar-link-content\"} onClick={() => handleClick('/cart')} >\r\n                <i className=\"fas fa-shopping-cart\"></i>\r\n             </Link>\r\n          </div>\r\n\r\n          <div>\r\n             <Link to={user.role==='admin' ? \"/users\" : `/users/${user.id}`} className={activeLink === '/users' || activeLink === `/users/${document.location.pathname.match(/\\d/g)}` ? 'selected' : \"navbar-link-content\"} onClick={() => handleClick('/users')} >\r\n                <i className=\"fas fa-user-circle\"></i>\r\n             </Link>\r\n          </div>\r\n\r\n       </div>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home(props) {\r\n  const { handleClick } = props;\r\n  const [isSignedIn, setState] = useState(false);\r\n\r\n  return (\r\n    <div className=\"Home-content\">\r\n      <div className=\"Home-header\">\r\n        <text className=\"text-logo\">The Qcc Shopper</text>\r\n        <img src=\"marvel.jpg\" alt=\"\" width=\"570\" height=\"250\"/>\r\n      </div>\r\n\r\n      <div className=\"Home-footer\"> \r\n         <div>\r\n            <h1> Marvel Fan? </h1>\r\n            <text> and not a part of our marvelous community? </text>\r\n            <text> Well, hurry up and join in the fun by signing up for an account and grabbing your own unique superpower! </text>\r\n            <div className=\"sign-up-container\">\r\n               {isSignedIn ? <Link to=\"/login\" onClick={() => handleClick('/login')}> <button className=\"sign-up-btn\"> Login </button> </Link> : <Link to=\"/signup\" onClick={() => handleClick('/signup')}> <button className=\"sign-up-btn\"> Sign up </button> </Link>}\r\n            </div>\r\n         </div>\r\n         <div>\r\n            <h1> Welcome to the marvel family! Have a look around! </h1>\r\n            <img src=\"marvel_logo.png\" alt=\"\" width=\"300\" />\r\n         </div>\r\n         <div>\r\n            <h1> About: </h1>\r\n            <text> In this site, you'll find some of the most awesome, powerful superpowers known to man, and it all can be within your grasp! </text>\r\n            <text> But of course, there's a catch. Since you can't find these powers anywhere else in the world, the prices can be quite exorbitant. </text>\r\n            <text> Nonetheless, you won't regret it..Happy shopping! </text>\r\n         </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport Items from './Items';\r\n\r\nexport default function Login(props) {\r\n    const { handleClick, handleUser } = props;\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [items, setItems] = useState([]);\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const { data } = await Axios.post('/auth/login', {\r\n                email: email,\r\n                password: password,\r\n            });\r\n\r\n            if (data.id) {\r\n                const { data:items } = await Axios.get('api/items');\r\n                setItems(items);\r\n                handleUser(data);\r\n            }\r\n            else if (Array.isArray(data)) {\r\n                setItems(data);\r\n            }\r\n            else if (data === 'Login failed') {\r\n                window.alert(data)\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    if (items.length > 0) {\r\n        return <Redirect to='/superpowers' component={Items} />\r\n    } else {\r\n        return (\r\n            <div className=\"Login\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormGroup controlId=\"email\" bssize=\"large\">\r\n                        <FormLabel>E-mail:</FormLabel>\r\n                        <FormControl\r\n                            autoFocus\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"password\" bssize=\"large\">\r\n                        <FormLabel>Password:</FormLabel>\r\n                        <FormControl\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button block bssize=\"large\" disabled={!validateForm()} type=\"submit\" onClick={() => handleClick('/superpowers')}>\r\n                        Login\r\n                    </Button>\r\n                    <br /><br />\r\n                    <div>Not part of superpower community? Join us!</div>\r\n                    <Link to=\"/signup\">\r\n                        <Button block bssize=\"large\" type=\"submit\">\r\n                            Sign Up\r\n                        </Button>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport Login from './Login';\r\nimport { Card, CardColumns, Button } from 'react-bootstrap';\r\n\r\nexport default class Cart extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            orders: [],\r\n            isLoggedIn: false,\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { data } = await Axios.get('/api/orders');\r\n\r\n            if (typeof (data) === 'string') {\r\n                this.setState({\r\n                    isLoggedIn: false,\r\n                    isLoading: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    orders: data,\r\n                    isLoggedIn: true,\r\n                    isLoading: false,\r\n                });\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err.stack);\r\n        }\r\n    }\r\n\r\n    handleRemove = async (id) => {\r\n        try {\r\n           const { data } = await Axios.delete(`/api/orders/${id}`);\r\n           \r\n           let newOrders = this.state.orders.filter(order => order.id !== id);\r\n\r\n           this.setState({\r\n                  orders: newOrders,\r\n                  isLoggedIn: true,\r\n                  isLoading: false,\r\n           }); \r\n        }\r\n        catch(err) {\r\n           console.error(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { orders, isLoggedIn, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div> Loading... </div>\r\n            );\r\n        }\r\n        else if (isLoggedIn === false) {\r\n            return (\r\n                <Redirect to='/login' component={Login} />\r\n            );\r\n        }\r\n        else if(orders.length === 0) {\r\n            return (\r\n               <div>\r\n                   <h1 style={{display: 'flex', justifyContent:'center'}}> You have no superpowers in cart! </h1>\r\n               </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h1 style={{display: 'flex', justifyContent:'center'}}> Your Cart </h1>\r\n                    <CardColumns style={{marginLeft: '5%', marginRight: '5%'}}>\r\n                        {orders.map(order => {\r\n                            return (\r\n                                <Card key={order.id}>\r\n                                    <Card.Img variant=\"top\" src={order.imageUrl} alt='' />\r\n                                    <Card.Body>\r\n                                    <Card.Title><Link to={`/superpowers/${order.id}`}> {order.superhero}'s {order.name} </Link></Card.Title>\r\n                                    <Card.Text>${order.price}.00</Card.Text>\r\n                                    <Button variant=\"danger\" type=\"button\" onClick={() => this.handleRemove(order.id)}> Remove from cart </Button>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            );\r\n                        })}\r\n                    </CardColumns>\r\n                    <div style={{display: 'flex', justifyContent:'center'}}>\r\n                        <Link to=\"/payment\"> <Button variant=\"primary\" type=\"button\"> checkout </Button> </Link>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport  { Login, MemberInfo } from './index';\r\n\r\nexport default class UsersInfo extends Component {\r\n    //template for react component\r\n    constructor() {\r\n        super();\r\n        //inital state of user info component; user should have info that matches tables in db\r\n        this.state = {\r\n            users: [],\r\n            user: {},\r\n            //renders placeholder while loading data\r\n            loading: true\r\n        };\r\n    };\r\n\r\n    async componentDidMount() {\r\n        //this is where fetch request goes; if no data or error connecting to server, catch error & send to console\r\n        try {\r\n            //after component mounts; call server, use route, GET db info, setState sets information to the state            \r\n            const { data } = await axios.get('/api/users');\r\n            console.log(data);\r\n\r\n            if (data.user) {\r\n                this.setState({\r\n                    user: data.user,\r\n                    loading: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    users: data,\r\n                    loading: false,\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('ERROR: ', error);\r\n        }\r\n    };\r\n\r\n    async handleDelete(deletingUserId) {\r\n        try {\r\n            const { data } = await axios.delete(`/api/users/${deletingUserId}`);\r\n            console.log(data);\r\n            // ONLY DELETE THE USER IF IT'S SUCCESSFUL IN THE BACKEND\r\n            // AND MOVE ON TO LINE 40\r\n\r\n            const newUsersList = this.state.users.filter(user => {\r\n                return user.id !== deletingUserId;\r\n            });\r\n            this.setState({\r\n                users: [...newUsersList]\r\n            });\r\n        } catch (err) {\r\n            console.error('ERROR: ', err);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        //retrieving user and loading info from state\r\n        const { users, user, loading } = this.state\r\n\r\n        if (loading) {\r\n            //display loading if loading = true on state\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        if (user.role === 'admin') {\r\n            //should display user image, name, address & email if user is found.\r\n            return (\r\n                <div>This is the ADMIN's route to ALL USERS info.\r\n                    <hr />\r\n                    {users.map(user => (\r\n                        <li className=\"list\" key={user.id}>\r\n                            <div>\r\n                                <img src={user.imageUrl} alt='userImage' />\r\n                                <p> Name: <Link to={`/users/${user.id}`}>{user.firstName} {user.lastName}</Link></p>\r\n                                <p> Address: {user.addresses[0].line1}, {user.addresses[0].line2} </p>\r\n                                <p> City: {user.addresses[0].city} </p>\r\n                                <p> State: {user.addresses[0].state} </p>\r\n                                <p> Zipcode: {user.addresses[0].zip} </p>\r\n                                <p> Email: {user.email}</p>\r\n                                <p> Role: {user.role}</p>\r\n                                <button type=\"button\" onClick={evt => this.handleDelete(user.id)}>Delete</button>\r\n                            </div>\r\n                        </li>)\r\n                    )}\r\n                </div>\r\n            )\r\n        } else if (user.role === 'member') {\r\n            return <Redirect to={`/users/${user.id}`} component={MemberInfo} />\r\n        } else {\r\n            return <Redirect to='/login' component={Login} />\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\n\r\nconst style = {\r\n        position: 'relative',\r\n        padding: '1rem',\r\n        border: '.2rem solid #ececec',\r\n        borderRadius: '8px',\r\n        marginRight: '5%',\r\n        marginLeft: '5%',\r\n        color: '#212529'\r\n    }\r\n\r\nfunction SignupForm(props) {\r\n    const { handleSubmit } = props\r\n    return (\r\n            <Form onSubmit={handleSubmit} style={style}>\r\n                <Form.Group controlId=\"Email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control required type=\"email\" name='email' placeholder=\"Enter email\" />\r\n                    <Form.Text className='text-muted'>\r\n                        Your email and other information will not be shared.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control required type=\"password\" name='password' placeholder=\"Password\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"First Name\">\r\n                    <Form.Label>Firstname</Form.Label>\r\n                    <Form.Control required type=\"text\" name='firstName' placeholder=\"Enter Here\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Last Name\">\r\n                    <Form.Label>Lastname</Form.Label>\r\n                    <Form.Control required type=\"text\" name='lastName' placeholder=\"Enter Here\"/>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"Line1\">\r\n                    <Form.Label>Street Address</Form.Label>\r\n                    <Form.Control required type=\"text\" name='line1' placeholder=\"ex: 10000 Somewhere Street\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Line2\">\r\n                    <Form.Label>Apt/PO Box #</Form.Label>\r\n                    <Form.Control type=\"text\" name='line2' placeholder=\"ex: 100-00 ABC Street\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"City\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control required type=\"text\" name='city' placeholder=\"ex: Queens\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"State\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control required type=\"text\" name='state' placeholder=\"ex: NY\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Zipcode\">\r\n                    <Form.Label>Zipcode</Form.Label>\r\n                    <Form.Control required type=\"text\" name='zip' placeholder=\"ex: 11106\" />\r\n                </Form.Group>\r\n                        \r\n                <Form.Group controlId=\"Image\">\r\n                    <Form.Label>User Image URL</Form.Label>\r\n                    <Form.Control type=\"text\" name='imageUrl' placeholder=\"Direct link from image host\" />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type='submit'>\r\n                        Sign Up\r\n                </Button>\r\n                \r\n\r\n            </Form>\r\n    )\r\n}\r\n\r\nexport default SignupForm;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport SignupForm from './SignupForm';\r\n\r\nexport default class Signup extends Component {\r\n    constructor() {\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this) \r\n        //binding the context of the class to remember the function's use when passed to props\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        //prevent reloading of page onClick\r\n        event.preventDefault()\r\n        \r\n        const userDetails = {\r\n            email: event.target.email.value,\r\n            password: event.target.password.value,\r\n            firstName: event.target.firstName.value,\r\n            lastName: event.target.lastName.value,\r\n            imageUrl: event.target.imageUrl.value\r\n        }\r\n\r\n        const userAddress = {\r\n            line1: event.target.line1.value,\r\n            line2: event.target.line2.value,\r\n            city: event.target.city.value,\r\n            state: event.target.state.value,\r\n            zip: event.target.zip.value\r\n        }\r\n\r\n        //send data to server; to be sent to db\r\n        try {\r\n            const {data} = await axios.post('/auth/signup', {userAddress, userDetails})\r\n            \r\n            if (typeof data === 'string'){\r\n                window.alert(data)\r\n            }\r\n            else{\r\n                this.props.history.push({\r\n                    pathname: `/users/${data.id}`\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const headerStyle = {\r\n            textAlign: 'center',\r\n            padding: '1%'\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1 style={headerStyle}>Signup Form</h1>\r\n                <SignupForm handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class MemberInfo extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            memberInfo: {},\r\n            memberId: null,\r\n            loading: true,\r\n            error: {error: false, message: ''},\r\n        };\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            // const { data } = await axios.get('/api/memberInfos/:memberInfoId');\r\n            const { userId } = this.props.match.params;\r\n            \r\n            this.props.history.listen((location,action) => {\r\n                this.props.handleClick(document.location.pathname);\r\n            });\r\n            \r\n            const member = await fetch(`/api/users/${userId}`, { method: 'GET' });\r\n            const memberData = await member.json();\r\n\r\n            this.setState({\r\n                memberInfo: memberData.user,\r\n                memberId: memberData.id,\r\n                loading: false,\r\n                error: {error:false, message: ''}\r\n            });\r\n            \r\n        } catch (err) {\r\n            console.error('ERROR: ', err);\r\n     \r\n            this.setState({\r\n                loading: false,\r\n                error: {error: true, message: 'USER DOESN\\'T EXIST'}\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { memberInfo, memberId, loading, error } = this.state;\r\n        if(error.error) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n\r\n        if (loading) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        else if (memberInfo.id === memberId) {\r\n            return (\r\n                <div className=\"individual-page\">\r\n                    <li key={memberInfo.id}>\r\n                        <div>\r\n                            <img src={memberInfo.imageUrl} alt='userImage' />\r\n                            <p>Name: {memberInfo.firstName} {memberInfo.lastName}</p>\r\n                            <p>Address: {memberInfo.addresses[0].line1}, {memberInfo.addresses[0].line2} </p>\r\n                            <p>City: {memberInfo.addresses[0].city} </p>\r\n                            <p>State: {memberInfo.addresses[0].state} </p>\r\n                            <p>Zipcode: {memberInfo.addresses[0].zip} </p>\r\n                            <p>Email: {memberInfo.email}</p>\r\n                            <p>Role: {memberInfo.role}</p>\r\n                        </div>\r\n                    </li>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return <Redirect to=\"/superpowers\"/>\r\n        }\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nexport default class Item extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            item: {},\r\n            isLoading: true,\r\n        }\r\n   }\r\n\r\n   async componentDidMount() {\r\n      try {\r\n        const { superpowerId } = this.props.match.params;\r\n        \r\n        const { data } = await Axios.get(`/api/items/${superpowerId}`);\r\n\r\n        this.setState({\r\n            item: data,\r\n            isLoading: false,\r\n        });\r\n      }\r\n      catch(err) {\r\n          console.error(err.stack);\r\n      }\r\n   }\r\n    \r\n   render() {\r\n      const { item, isLoading } = this.state;\r\n\r\n      if(isLoading) {\r\n         return (\r\n             <div> Loading... </div>\r\n         );\r\n      }\r\n      else {\r\n         return (\r\n             <div className=\"individual-page\">\r\n                <img src={item.imageUrl} alt=\"\"/>\r\n                <div> {item.superhero}'s' {item.name} </div>\r\n                <div> ${item.price} </div>\r\n                <div> {item.description} </div>\r\n                <div> <Link to=\"/superpowers\"> Back to superpower list </Link> </div>\r\n             </div>\r\n         );\r\n      }\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n       <div>\r\n           404 Error not found...The path you were looking for does not exist.\r\n       </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CardElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nexport default function CheckoutForm() {\r\n  \r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState('');\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    window.fetch(\"/api/orders/payment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({items: [{ id: \"xl-tshirt\" }]})\r\n      })\r\n      .then(res => {\r\n         return res.json();\r\n      })\r\n      .then(data => {\r\n        setClientSecret(data.clientSecret);\r\n      });\r\n  }, [] );\r\n\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#32325d\"\r\n        }\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = async (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  const handleSubmit = async ev => {\r\n    ev.preventDefault();\r\n\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: ev.target.name.value\r\n        }\r\n      }\r\n    });\r\n\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } \r\n    else {\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\r\n      <button\r\n        disabled={processing || disabled || succeeded}\r\n        id=\"submit\"\r\n      >\r\n        <span id=\"button-text\">\r\n          {processing ? (\r\n            <div className=\"spinner\" id=\"spinner\"></div>\r\n          ) : (\r\n            \"Pay\"\r\n          )}\r\n        </span>\r\n      </button>\r\n      {/* Show any error that happens when processing the payment */}\r\n      {error && (\r\n        <div className=\"card-error\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      {/* Show a success message upon completion */}\r\n      <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n        Payment succeeded, see the result in your\r\n        <a\r\n          href={`https://dashboard.stripe.com/test/payments`}\r\n        >\r\n          {\" \"}\r\n          Stripe dashboard.\r\n        </a> Refresh the page to pay again.\r\n      </p>\r\n    </form>\r\n  );\r\n\r\n}","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport default class OrderSummary extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: [],\r\n            isLoading: true,\r\n        };\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { data } = await Axios.get('/api/orders');\r\n            this.setState({\r\n                items: data,\r\n                isLoading: false,\r\n            });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { items, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div>Your items are being prepared...</div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h3> Order Summary </h3>\r\n                    <hr />\r\n                    <div>\r\n                        {items.map(item => {\r\n                            return (\r\n                                <ListGroup horizontal='md' key={item.id}>\r\n                                    <img src={item.imageUrl} alt={item.name} style={{width: '200px', height: '100px'}}/>\r\n                                    <ListGroup.Item>{item.name}</ListGroup.Item>\r\n                                    <ListGroup.Item>{item.price}</ListGroup.Item>\r\n                                </ListGroup>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n};","import React from 'react';\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport OrderSummary from \"./OrderSummary\";\r\n\r\nconst promise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\n\r\nexport default function Payment() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <OrderSummary />\r\n            </div>\r\n            <br />\r\n            <div className=\"payment-page\">\r\n                <Elements stripe={promise}>\r\n                    <CheckoutForm />\r\n                </Elements>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Home, Items, Item, Cart, UsersInfo, MemberInfo, Signup, Login, NotFound, Payment } from './components/';\r\n\r\nexport default function Routes(props) {\r\n  const { handleClick, handleUser, user } = props;\r\n\r\n  // put all routes here\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" render={() => <Home handleClick={handleClick} />} />\r\n\r\n      <Route exact path=\"/superpowers\" component={Items} />\r\n      <Route path=\"/superpowers/:superpowerId\" component={Item} />\r\n\r\n      <Route path=\"/cart\" component={Cart} />\r\n\r\n      <Route path=\"/signup\" component={Signup} />\r\n      <Route path=\"/login\" render={() => <Login handleClick={handleClick} handleUser={handleUser} />} />\r\n      <Route path=\"/payment\" component={Payment} />\r\n\r\n      <Route exact path=\"/users\">\r\n        {user.role === 'admin' ? <UsersInfo /> : <Redirect to={`/users/${user.id}`} />}\r\n      </Route>\r\n      <Route path=\"/users/:userId\" render={(matchProps) => <MemberInfo {...matchProps} handleClick={handleClick} user={user} /> } />\r\n\r\n      <Route path=\"*\" component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Navbar } from \"./components/\";\r\nimport Routes from \"./Routes\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n   constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n         activeLink: document.location.pathname,\r\n         user: {},\r\n      }\r\n   }\r\n\r\n   handleClick = pathname => {\r\n      this.setState({\r\n         activeLink: pathname,\r\n      });\r\n   }\r\n\r\n   handleUser = userInfo => {\r\n      this.setState({\r\n         user: userInfo,\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Navbar activeLink={this.state.activeLink} user={this.state.user} handleClick={this.handleClick} />\r\n            <div className=\"content\">\r\n               <Routes user={this.state.user} handleClick={this.handleClick} handleUser={this.handleUser} />\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}